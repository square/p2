// Code generated by protoc-gen-go.
// source: protos/store_server.proto
// DO NOT EDIT!

/*
Package store is a generated protocol buffer package.

It is generated from these files:
	protos/store_server.proto

It has these top-level messages:
	SetPodRequest
	SetPodResponse
	GetPodRequest
	GetPodResponse
*/
package store

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PodPrefix int32

const (
	PodPrefix_unknown PodPrefix = 0
	PodPrefix_intent  PodPrefix = 1
	PodPrefix_reality PodPrefix = 2
	PodPrefix_hooks   PodPrefix = 3
)

var PodPrefix_name = map[int32]string{
	0: "unknown",
	1: "intent",
	2: "reality",
	3: "hooks",
}
var PodPrefix_value = map[string]int32{
	"unknown": 0,
	"intent":  1,
	"reality": 2,
	"hooks":   3,
}

func (x PodPrefix) String() string {
	return proto.EnumName(PodPrefix_name, int32(x))
}
func (PodPrefix) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SetPodRequest struct {
	PodPrefix PodPrefix `protobuf:"varint,1,opt,name=pod_prefix,json=podPrefix,enum=store.PodPrefix" json:"pod_prefix,omitempty"`
	NodeName  string    `protobuf:"bytes,2,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	Manifest  string    `protobuf:"bytes,3,opt,name=manifest" json:"manifest,omitempty"`
}

func (m *SetPodRequest) Reset()                    { *m = SetPodRequest{} }
func (m *SetPodRequest) String() string            { return proto.CompactTextString(m) }
func (*SetPodRequest) ProtoMessage()               {}
func (*SetPodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SetPodResponse struct {
	Duration int64 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
}

func (m *SetPodResponse) Reset()                    { *m = SetPodResponse{} }
func (m *SetPodResponse) String() string            { return proto.CompactTextString(m) }
func (*SetPodResponse) ProtoMessage()               {}
func (*SetPodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetPodRequest struct {
	PodPrefix PodPrefix `protobuf:"varint,1,opt,name=pod_prefix,json=podPrefix,enum=store.PodPrefix" json:"pod_prefix,omitempty"`
	NodeName  string    `protobuf:"bytes,2,opt,name=node_name,json=nodeName" json:"node_name,omitempty"`
	PodId     string    `protobuf:"bytes,3,opt,name=pod_id,json=podId" json:"pod_id,omitempty"`
}

func (m *GetPodRequest) Reset()                    { *m = GetPodRequest{} }
func (m *GetPodRequest) String() string            { return proto.CompactTextString(m) }
func (*GetPodRequest) ProtoMessage()               {}
func (*GetPodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetPodResponse struct {
	Manifest string `protobuf:"bytes,1,opt,name=manifest" json:"manifest,omitempty"`
	Duration int64  `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
}

func (m *GetPodResponse) Reset()                    { *m = GetPodResponse{} }
func (m *GetPodResponse) String() string            { return proto.CompactTextString(m) }
func (*GetPodResponse) ProtoMessage()               {}
func (*GetPodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*SetPodRequest)(nil), "store.SetPodRequest")
	proto.RegisterType((*SetPodResponse)(nil), "store.SetPodResponse")
	proto.RegisterType((*GetPodRequest)(nil), "store.GetPodRequest")
	proto.RegisterType((*GetPodResponse)(nil), "store.GetPodResponse")
	proto.RegisterEnum("store.PodPrefix", PodPrefix_name, PodPrefix_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Store service

type StoreClient interface {
	// Lists pod manifests that should be running on a node
	SetPod(ctx context.Context, in *SetPodRequest, opts ...grpc.CallOption) (*SetPodResponse, error)
	GetPod(ctx context.Context, in *GetPodRequest, opts ...grpc.CallOption) (*GetPodResponse, error)
}

type storeClient struct {
	cc *grpc.ClientConn
}

func NewStoreClient(cc *grpc.ClientConn) StoreClient {
	return &storeClient{cc}
}

func (c *storeClient) SetPod(ctx context.Context, in *SetPodRequest, opts ...grpc.CallOption) (*SetPodResponse, error) {
	out := new(SetPodResponse)
	err := grpc.Invoke(ctx, "/store.Store/SetPod", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) GetPod(ctx context.Context, in *GetPodRequest, opts ...grpc.CallOption) (*GetPodResponse, error) {
	out := new(GetPodResponse)
	err := grpc.Invoke(ctx, "/store.Store/GetPod", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Store service

type StoreServer interface {
	// Lists pod manifests that should be running on a node
	SetPod(context.Context, *SetPodRequest) (*SetPodResponse, error)
	GetPod(context.Context, *GetPodRequest) (*GetPodResponse, error)
}

func RegisterStoreServer(s *grpc.Server, srv StoreServer) {
	s.RegisterService(&_Store_serviceDesc, srv)
}

func _Store_SetPod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).SetPod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/store.Store/SetPod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).SetPod(ctx, req.(*SetPodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_GetPod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).GetPod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/store.Store/GetPod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).GetPod(ctx, req.(*GetPodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Store_serviceDesc = grpc.ServiceDesc{
	ServiceName: "store.Store",
	HandlerType: (*StoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetPod",
			Handler:    _Store_SetPod_Handler,
		},
		{
			MethodName: "GetPod",
			Handler:    _Store_GetPod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("protos/store_server.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x92, 0x41, 0x4b, 0xfb, 0x40,
	0x10, 0xc5, 0x9b, 0x96, 0xe4, 0xdf, 0xcc, 0x9f, 0x96, 0xb0, 0x58, 0xa8, 0xf5, 0x52, 0x72, 0x2a,
	0x22, 0x2d, 0xd4, 0x83, 0x17, 0xef, 0xd1, 0x8b, 0x94, 0xf4, 0x03, 0x84, 0xc8, 0x4e, 0x71, 0xa9,
	0xd9, 0x59, 0x77, 0x37, 0x6a, 0xbe, 0xbd, 0x64, 0xd3, 0x04, 0x52, 0xc5, 0x9b, 0xb7, 0xcc, 0x9b,
	0x79, 0x93, 0xdf, 0xdb, 0x5d, 0xb8, 0x54, 0x9a, 0x2c, 0x99, 0x8d, 0xb1, 0xa4, 0x31, 0x33, 0xa8,
	0xdf, 0x51, 0xaf, 0x9d, 0xc6, 0x7c, 0xa7, 0xc5, 0x15, 0x4c, 0xf6, 0x68, 0x77, 0xc4, 0x53, 0x7c,
	0x2b, 0xd1, 0x58, 0xb6, 0x01, 0x50, 0xc4, 0x33, 0xa5, 0xf1, 0x20, 0x3e, 0xe7, 0xde, 0xd2, 0x5b,
	0x4d, 0xb7, 0xd1, 0xda, 0x0d, 0xaf, 0x77, 0xc4, 0x77, 0x4e, 0x4f, 0x43, 0xd5, 0x7e, 0xb2, 0x2b,
	0x08, 0x25, 0x71, 0xcc, 0x64, 0x5e, 0xe0, 0x7c, 0xb8, 0xf4, 0x56, 0x61, 0x3a, 0xae, 0x85, 0xa7,
	0xbc, 0x40, 0xb6, 0x80, 0x71, 0x91, 0x4b, 0x71, 0x40, 0x63, 0xe7, 0xa3, 0xa6, 0xd7, 0xd6, 0xf1,
	0x0d, 0x4c, 0xdb, 0x5f, 0x1b, 0x45, 0xd2, 0xb8, 0x69, 0x5e, 0xea, 0xdc, 0x0a, 0x92, 0x6e, 0xd3,
	0x28, 0xed, 0xea, 0xd8, 0xc2, 0x24, 0xf9, 0x43, 0xd0, 0x19, 0x04, 0xf5, 0x36, 0xc1, 0x4f, 0x98,
	0xbe, 0x22, 0xfe, 0xc8, 0xe3, 0x07, 0x98, 0x26, 0xdf, 0x18, 0xbb, 0x44, 0x5e, 0x3f, 0xd1, 0x6f,
	0xfc, 0xd7, 0xf7, 0x10, 0x76, 0x54, 0xec, 0x3f, 0xfc, 0x2b, 0xe5, 0x51, 0xd2, 0x87, 0x8c, 0x06,
	0x0c, 0x20, 0x10, 0xd2, 0xa2, 0xb4, 0x91, 0x57, 0x37, 0x34, 0xe6, 0xaf, 0xc2, 0x56, 0xd1, 0x90,
	0x85, 0xe0, 0xbf, 0x10, 0x1d, 0x4d, 0x34, 0xda, 0x56, 0xe0, 0xef, 0xeb, 0x64, 0xec, 0x0e, 0x82,
	0xe6, 0xd0, 0xd8, 0xc5, 0x29, 0x6b, 0xef, 0xfa, 0x16, 0xb3, 0x33, 0xb5, 0xa1, 0x8e, 0x07, 0xb5,
	0x31, 0xe9, 0x1b, 0x93, 0x1f, 0x8d, 0xc9, 0x99, 0xf1, 0x39, 0x70, 0xef, 0xe5, 0xf6, 0x2b, 0x00,
	0x00, 0xff, 0xff, 0x74, 0x7a, 0xb2, 0xb5, 0x4c, 0x02, 0x00, 0x00,
}
